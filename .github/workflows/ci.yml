name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mydb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Step 1: Checkout source code
      - name: Checkout source code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Install Docker Compose v2
      - name: Install Docker Compose v2
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin
          docker compose version

      # Step 4: Build and start services
      - name: Build and start containers
        run: |
          docker compose -f docker-compose.yml build
          docker compose -f docker-compose.yml up -d

      # Step 5: Install backend dependencies
      - name: Install backend deps
        run: |
          cd backend
          npm install

      # Step 6: Install frontend dependencies
      - name: Install frontend deps
        run: |
          cd frontend
          npm install

      # Step 7: Run backend build
      - name: Build backend
        run: |
          cd backend
          npm run build

      # Step 8: Run frontend build
      - name: Build frontend
        run: |
          cd frontend
          npm run build

      # Step 9: Run tests
      - name: Run tests
        run: |
          cd backend
          npm test

      # Step 10: Stop containers (cleanup)
      - name: Stop containers
        if: always()
        run: docker compose down